add_executable(sammy_solve solve.cpp)
target_link_libraries(sammy_solve PRIVATE sammy)

add_executable(generate_subproblem_mes_entry_points generate_subproblem_mes_entry_points.cpp)
target_link_libraries(generate_subproblem_mes_entry_points PRIVATE sammy)

add_executable(solve_subproblems_mes_entry_point solve_subproblems_mes_entry_points.cpp)
target_link_libraries(solve_subproblems_mes_entry_point PRIVATE sammy)

if(LTO_SUPPORTED)
  set_property(TARGET sammy_solve PROPERTY INTERPROCEDURAL_OPTIMIZATION TRUE)
  set_property(TARGET sammy_solve PROPERTY INTERPROCEDURAL_OPTIMIZATION_DEBUG FALSE)
  set_property(TARGET generate_subproblem_mes_entry_points PROPERTY INTERPROCEDURAL_OPTIMIZATION TRUE)
  set_property(TARGET generate_subproblem_mes_entry_points PROPERTY INTERPROCEDURAL_OPTIMIZATION_DEBUG FALSE)
  set_property(TARGET solve_subproblems_mes_entry_point PROPERTY INTERPROCEDURAL_OPTIMIZATION TRUE)
  set_property(TARGET solve_subproblems_mes_entry_point PROPERTY INTERPROCEDURAL_OPTIMIZATION_DEBUG FALSE)
endif()
